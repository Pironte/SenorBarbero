// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SenorBarbero.Data;

#nullable disable

namespace SenorBarbero.Migrations
{
    [DbContext(typeof(SenorBarberoDbContext))]
    partial class SenorBarberoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SenorBarbero.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Cidade");

                    b.Property<string>("Complement")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Complemento");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Pais");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Bairro");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Numero");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CEP");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Estado");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Rua");

                    b.HasKey("Id");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("SenorBarbero.Model.BarberShop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("Descricao");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Nome");

                    b.Property<DateTime?>("Schedules")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Horarios");

                    b.HasKey("Id");

                    b.ToTable("Barbearia");
                });

            modelBuilder.Entity("SenorBarbero.Model.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("EnableNotification")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("HabilitaNotificacao");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Linguagem");

                    b.HasKey("Id");

                    b.ToTable("Configuracoes");
                });

            modelBuilder.Entity("SenorBarbero.Model.SocialMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BarberShopId")
                        .HasColumnType("int")
                        .HasColumnName("Barbearia_Id");

                    b.Property<short>("socialNetwork")
                        .HasColumnType("smallint")
                        .HasColumnName("Rede");

                    b.HasKey("Id");

                    b.HasIndex("BarberShopId");

                    b.ToTable("RedeSocial");
                });

            modelBuilder.Entity("SenorBarbero.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddressId")
                        .HasColumnType("int")
                        .HasColumnName("Endereco_Id");

                    b.Property<int>("ConfigurationId")
                        .HasColumnType("int")
                        .HasColumnName("Configuracao_Id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Nome");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Senha");

                    b.Property<short>("Profile")
                        .HasColumnType("smallint")
                        .HasColumnName("Perfil");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("ConfigurationId")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("SenorBarbero.Model.SocialMedia", b =>
                {
                    b.HasOne("SenorBarbero.Model.BarberShop", "BarberShop")
                        .WithMany("SocialMedias")
                        .HasForeignKey("BarberShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BarberShop");
                });

            modelBuilder.Entity("SenorBarbero.Model.User", b =>
                {
                    b.HasOne("SenorBarbero.Model.Address", "Address")
                        .WithOne("User")
                        .HasForeignKey("SenorBarbero.Model.User", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SenorBarbero.Model.Configuration", "Configuration")
                        .WithOne("User")
                        .HasForeignKey("SenorBarbero.Model.User", "ConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Configuration");
                });

            modelBuilder.Entity("SenorBarbero.Model.Address", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("SenorBarbero.Model.BarberShop", b =>
                {
                    b.Navigation("SocialMedias");
                });

            modelBuilder.Entity("SenorBarbero.Model.Configuration", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
